// 文字
@mixin font-ladder($i: 2) {
  font-size: math.floor(24px * math.pow(1.6, $i/4));
}

$line-h: 1.6;

// 颜色
$color-bg: linear-gradient(to bottom, #525662, #3f444e);
$color-white: #fff;
$color-black: #292b2f;
$color-veil: #000;
$color-main: #26ebdb;

// 栅格
$page-w: 1920px;
$page-h: 1080px;
$safe-v: 80px;
$safe-h: 60px;
$grid-gap: 40px;
$grid-min: 10px;

// 圆角
$corner: 10px;

// 阴影
@mixin shadow($depth: .7, $size: 'focus') {
  @if $size=='focus' {
    box-shadow: 0 40px 80px 0 rgba($color-veil, $depth);
  }

  @else if $size=='small' {
    box-shadow: 0 20px 40px 0 rgba($color-veil, $depth);
  }

  @else if $size=='def' {
    box-shadow: 0 5px 10px 0 rgba($color-veil, $depth - .3);
  }
}

// 卡片形状
@mixin card($width: 100px, $ratio: 16/9) {
  width: $width;

  @if type-of($ratio)=='number' {
    height: math.floor($width / $ratio);
  }

  @else if type-of($ratio)=='string' {
    @if str-index($ratio, 'metal')==1 {
      @for $i from 1 through 10 {
        @if $ratio=='metal-'+#{$i} {
          height: math.floor($width / metallic-ratio($i));
        }
      }
    }

    @else {
      height: $width;
    }
  }
}

@function metallic-ratio($n) {
  @return ($n + math.sqrt($n * $n + 4)) / 2;
}

// 动效曲线
$curve-stand: cubic-bezier(0.4, 0.0, 0.2, 1);
$curve-decel: cubic-bezier(0.0, 0.0, 0.2, 1);
$curve-accel: cubic-bezier(0.4, 0.0, 1.0, 1);
$curve-sharp: cubic-bezier(0.4, 0.0, 0.6, 1);
$curve-ease: cubic-bezier(0.25, 0.1, 0.25, 1);
$curve-ease-in: cubic-bezier(0.42, 0, 1, 1);
$curve-ease-out: cubic-bezier(0, 0, 0.58, 1);
$curve-ease-in-out: cubic-bezier(0.42, 0, 0.58, 1);

@function spring-wobbly($t) {
  $E: math.$e;
  @return -0.5 * math.pow($E, (-6 * $t)) * (-2 * math.pow($E, (6 * $t)) + math.sin(12 * $t) + 2 * math.cos(12 * $t));
}

@function lerp($a, $b, $p) {
  @return $a+$p * ($b - $a);
}

// 导出js所需变量
:export {
  pageWidth: $page-w;
  pageHeight: $page-h;
}